CREATE TABLE IF NOT EXISTS USERS
(
    user_id   INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_name VARCHAR(200)                         NOT NULL,
    email     VARCHAR(200)                         NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (user_id),
    CONSTRAINT uq_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS CATEGORIES
(
    category_id   INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    category_name VARCHAR(200)                         NOT NULL,
    CONSTRAINT pk_categories PRIMARY KEY (category_id),
    CONSTRAINT uq_category_name UNIQUE (category_name)
);

CREATE TABLE IF NOT EXISTS EVENTS
(
    event_id           INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation         VARCHAR(2000)                        NOT NULL,
    category_id        INT                                  NOT NULL REFERENCES CATEGORIES (category_id),
    created_on         TIMESTAMP WITHOUT TIME ZONE          NOT NULL,
    description        VARCHAR(7000)                        NOT NULL,
    event_date         TIMESTAMP WITHOUT TIME ZONE          NOT NULL,
    initiator_id       INT                                  NOT NULL REFERENCES USERS (user_id) ON DELETE CASCADE,
    lat                FLOAT                                NOT NULL,
    lon                FLOAT                                NOT NULL,
    paid               BOOLEAN                              NOT NULL,
    participant_limit  INT                                  NOT NULL,
    published_on       TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN                              NOT NULL,
    state              VARCHAR(10)                          NOT NULL,
    title              VARCHAR(120)                         NOT NULL,
    CONSTRAINT pk_events PRIMARY KEY (event_id)
);

CREATE TABLE IF NOT EXISTS PARTICIPATION_REQUESTS
(
    request_id   INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created      TIMESTAMP WITHOUT TIME ZONE          NOT NULL,
    event_id     INT                                  NOT NULL REFERENCES EVENTS (event_id) ON DELETE CASCADE,
    requester_id INT                                  NOT NULL REFERENCES USERS (user_id) ON DELETE CASCADE,
    status       VARCHAR(200)                         NOT NULL,
    CONSTRAINT pk_participation_requests PRIMARY KEY (request_id)
);

CREATE TABLE IF NOT EXISTS COMPILATIONS
(
    compilation_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    pinned         BOOLEAN                              NOT NULL,
    title          VARCHAR(200)                         NOT NULL,
    CONSTRAINT pk_compilations PRIMARY KEY (compilation_id)
);

CREATE TABLE IF NOT EXISTS EVENTS_COMPILATIONS
(
    compilation_id INT NOT NULL REFERENCES COMPILATIONS (compilation_id) ON DELETE CASCADE,
    event_id       INT NOT NULL REFERENCES EVENTS (event_id) ON DELETE CASCADE,
    CONSTRAINT pk_events_compilations PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS USER_EVENT_RATINGS
(
    user_id     INT NOT NULL REFERENCES USERS (user_id) ON DELETE CASCADE,
    event_id    INT NOT NULL REFERENCES EVENTS (event_id) ON DELETE CASCADE,
    is_positive BOOLEAN,
    CONSTRAINT pk_events_likes PRIMARY KEY (user_id, event_id)
);